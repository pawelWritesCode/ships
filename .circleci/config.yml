version: 2.1

defaults: &defaults
    docker:
        -   image: circleci/golang:1.15.1
    working_directory: /go/src/github.com/pawelWritesCode/ships

pipeline: &pipeline
    jobs:
        - build-backend-go
        - build-godog-go
        - build-front-end
        -   go-unit-tests:
                requires:
                    - build-backend-go
        -   go-e2e-tests:
                requires:
                    - build-backend-go
                    - build-godog-go
        -   build-api-doc:
                requires:
                    - go-unit-tests
                    - go-e2e-tests


workflows:
    version: 2
    build_and_test:
        <<: *pipeline
    nightly:
        triggers:
            -   schedule:
                    cron: "0 0 * * *"
                    filters:
                        branches:
                            only:
                                - master
        <<: *pipeline

jobs:
    build-backend-go:
        <<: *defaults
        steps:
            - checkout
            -   restore_cache:
                    keys:
                        - go-mod-files-{{ checksum "backend-go/go.sum" }}
            -   run:
                    name: Download backend-end dependencies
                    working_directory: ./backend-go
                    command: GO111MODULE=on go get -v -t -d ./...

            -   save_cache:
                    key: go-mod-files-{{ checksum "backend-go/go.sum" }}
                    paths:
                        - "/go/pkg/mod"
    build-godog-go:
        <<: *defaults
        steps:
            - checkout
            -   restore_cache:
                    keys:
                        - go-mod-files-{{ checksum "godog/go.sum" }}
            -   run:
                    name: Download e2e tests dependencies
                    working_directory: godog
                    command: GO111MODULE=on go get -v -t -d ./...
            -   save_cache:
                    key: go-mod-files-{{ checksum "godog/go.sum" }}
                    paths:
                        - "/go/pkg/mod"
    build-front-end:
        docker:
            -   image: circleci/node:14.15.1
        steps:
            - checkout
            -   restore_cache:
                    keys:
                        - front-end-files
            -   run:
                    name: Download front-end dependencies
                    working_directory: frontend
                    command: yarn install
            -   save_cache:
                    key: front-end-files
                    paths:
                        - "frontend/node_modules"
    go-unit-tests:
        <<: *defaults
        steps:
            - checkout
            -   restore_cache:
                    keys:
                        - go-mod-files-{{ checksum "backend-go/go.sum" }}
            -   run:
                    name: Create temporary dir for code coverage
                    working_directory: backend-go
                    command: mkdir codecov
            -   run:
                    name: Run backend unit tests
                    working_directory: backend-go
                    command: go test -race -coverprofile=c.out ./...
            -   run:
                    name: Process code coverage
                    working_directory: backend-go
                    command: |
                        go tool cover -html=c.out -o coverage.html
                        mv coverage.html codecov
            - store_artifacts:
                    path: backend-go/codecov
    go-e2e-tests:
        <<: *defaults
        steps:
            - checkout
            -   restore_cache:
                    keys:
                        - go-mod-files-{{ checksum "backend-go/go.sum" }}
                        - go-mod-files-{{ checksum "godog/go.sum" }}
            -   run:
                    name: Download godog binary
                    working_directory: godog
                    command: GO111MODULE=on go get github.com/cucumber/godog/cmd/godog
            -   run:
                    name: Turn on backend
                    working_directory: backend-go
                    command: |
                        echo " " > .env
                        go run main.go
                    background: true
                    environment:
                        TIMEOUT: 60
                        DB_TYPE: mongodb
            -   run:
                    name: Make e2e tests
                    working_directory: godog
                    command: |
                        sleep 10
                        mkdir cucumber
                        godog --version
                        godog --format junit > cucumber/junit.xml && cat cucumber/junit.xml
                    environment:
                        PORT: 5000
                        ADDR: localhost
            -   store_test_results:
                    path: godog/cucumber
    build-api-doc:
        docker:
            -   image: circleci/node:14.15.1
        steps:
            - checkout
            - run:
                  name: Download redoc
                  working_directory: redoc
                  command: npm i redoc-cli
            - run:
                  name: Build api doc
                  working_directory: redoc
                  command: |
                      npx redoc-cli bundle \
                          --title="SHIPS API" \
                          --output=ships-rest-api.html \
                          api.yml
                      ls -la
                      pwd
            -   store_artifacts:
                    path: redoc/ships-rest-api.html